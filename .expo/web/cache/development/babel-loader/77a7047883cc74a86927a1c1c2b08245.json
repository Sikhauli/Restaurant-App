{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"disabled\", \"editable\", \"label\", \"error\", \"selectionColor\", \"underlineColor\", \"outlineColor\", \"activeOutlineColor\", \"dense\", \"style\", \"theme\", \"render\", \"multiline\", \"parentState\", \"innerRef\", \"onFocus\", \"forceFocus\", \"onBlur\", \"onChangeText\", \"onLayoutAnimatedText\", \"onLeftAffixLayoutChange\", \"onRightAffixLayoutChange\", \"left\", \"right\", \"placeholderTextColor\"],\n    _excluded2 = [\"fontSize\", \"fontWeight\", \"fontVariant\", \"lineHeight\", \"height\", \"backgroundColor\", \"textAlign\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport NativeTextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport color from 'color';\nimport TextInputAdornment, { getAdornmentConfig, getAdornmentStyleAdjustmentForNativeInput } from \"./Adornment/TextInputAdornment\";\nimport InputLabel from \"./Label/InputLabel\";\nimport LabelBackground from \"./Label/LabelBackground\";\nimport { MAXIMIZED_LABEL_FONT_SIZE, MINIMIZED_LABEL_FONT_SIZE, LABEL_WIGGLE_X_OFFSET, ADORNMENT_SIZE, ADORNMENT_OFFSET } from \"./constants\";\nimport { calculateLabelTopPosition, calculateInputHeight, calculatePadding, adjustPaddingOut, interpolatePlaceholder, calculateOutlinedIconAndAffixTopPosition } from \"./helpers\";\nimport { AdornmentType, AdornmentSide } from \"./Adornment/enums\";\nvar OUTLINE_MINIMIZED_LABEL_Y_OFFSET = -6;\nvar LABEL_PADDING_TOP = 8;\nvar MIN_HEIGHT = 64;\nvar MIN_DENSE_HEIGHT = 48;\nvar INPUT_PADDING_HORIZONTAL = 14;\n\nvar TextInputOutlined = function TextInputOutlined(_ref) {\n  var _affixTopPosition, _onAffixChange, _topPosition;\n\n  var _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      _ref$editable = _ref.editable,\n      editable = _ref$editable === void 0 ? true : _ref$editable,\n      label = _ref.label,\n      _ref$error = _ref.error,\n      error = _ref$error === void 0 ? false : _ref$error,\n      selectionColor = _ref.selectionColor,\n      _underlineColor = _ref.underlineColor,\n      customOutlineColor = _ref.outlineColor,\n      activeOutlineColor = _ref.activeOutlineColor,\n      dense = _ref.dense,\n      style = _ref.style,\n      theme = _ref.theme,\n      _ref$render = _ref.render,\n      render = _ref$render === void 0 ? function (props) {\n    return React.createElement(NativeTextInput, props);\n  } : _ref$render,\n      _ref$multiline = _ref.multiline,\n      multiline = _ref$multiline === void 0 ? false : _ref$multiline,\n      parentState = _ref.parentState,\n      innerRef = _ref.innerRef,\n      onFocus = _ref.onFocus,\n      forceFocus = _ref.forceFocus,\n      onBlur = _ref.onBlur,\n      onChangeText = _ref.onChangeText,\n      onLayoutAnimatedText = _ref.onLayoutAnimatedText,\n      onLeftAffixLayoutChange = _ref.onLeftAffixLayoutChange,\n      onRightAffixLayoutChange = _ref.onRightAffixLayoutChange,\n      left = _ref.left,\n      right = _ref.right,\n      placeholderTextColor = _ref.placeholderTextColor,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var adornmentConfig = getAdornmentConfig({\n    left: left,\n    right: right\n  });\n  var colors = theme.colors,\n      fonts = theme.fonts;\n  var font = fonts.regular;\n  var hasActiveOutline = parentState.focused || error;\n\n  var _ref4 = StyleSheet.flatten(style) || {},\n      fontSizeStyle = _ref4.fontSize,\n      fontWeight = _ref4.fontWeight,\n      fontVariant = _ref4.fontVariant,\n      lineHeight = _ref4.lineHeight,\n      height = _ref4.height,\n      _ref4$backgroundColor = _ref4.backgroundColor,\n      backgroundColor = _ref4$backgroundColor === void 0 ? colors.background : _ref4$backgroundColor,\n      textAlign = _ref4.textAlign,\n      viewStyle = _objectWithoutProperties(_ref4, _excluded2);\n\n  var fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n  var inputTextColor, activeColor, outlineColor, placeholderColor, errorColor;\n\n  if (disabled) {\n    var isTransparent = color(customOutlineColor).alpha() === 0;\n    inputTextColor = activeColor = color(colors.text).alpha(0.54).rgb().string();\n    placeholderColor = colors.disabled;\n    outlineColor = isTransparent ? customOutlineColor : colors.disabled;\n  } else {\n    inputTextColor = colors.text;\n    activeColor = error ? colors.error : activeOutlineColor || colors.primary;\n    placeholderColor = colors.placeholder;\n    outlineColor = customOutlineColor || colors.placeholder;\n    errorColor = colors.error;\n  }\n\n  var labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  var fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n  var labelWidth = parentState.labelLayout.width;\n  var labelHeight = parentState.labelLayout.height;\n  var labelHalfWidth = labelWidth / 2;\n  var labelHalfHeight = labelHeight / 2;\n  var baseLabelTranslateX = (I18nManager.isRTL ? 1 : -1) * (labelHalfWidth - labelScale * labelWidth / 2 - (fontSize - MINIMIZED_LABEL_FONT_SIZE) * labelScale);\n  var labelTranslationXOffset = 0;\n  var isAdornmentLeftIcon = adornmentConfig.some(function (_ref2) {\n    var side = _ref2.side,\n        type = _ref2.type;\n    return side === AdornmentSide.Left && type === AdornmentType.Icon;\n  });\n\n  if (isAdornmentLeftIcon) {\n    labelTranslationXOffset = (I18nManager.isRTL ? -1 : 1) * (ADORNMENT_SIZE + ADORNMENT_OFFSET - 8);\n  }\n\n  var minInputHeight = (dense ? MIN_DENSE_HEIGHT : MIN_HEIGHT) - LABEL_PADDING_TOP;\n  var inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n  var topPosition = calculateLabelTopPosition(labelHeight, inputHeight, LABEL_PADDING_TOP);\n\n  if (height && typeof height !== 'number') {\n    console.warn('Currently we support only numbers in height prop');\n  }\n\n  var paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight: labelHalfHeight,\n    offset: LABEL_PADDING_TOP,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition: topPosition,\n    fontSize: fontSize,\n    lineHeight: lineHeight,\n    label: label,\n    scale: fontScale,\n    isAndroid: Platform.OS === 'android',\n    styles: StyleSheet.flatten(dense ? styles.inputOutlinedDense : styles.inputOutlined)\n  };\n  var pad = calculatePadding(paddingSettings);\n  var paddingOut = adjustPaddingOut(_objectSpread(_objectSpread({}, paddingSettings), {}, {\n    pad: pad\n  }));\n  var baseLabelTranslateY = -labelHalfHeight - (topPosition + OUTLINE_MINIMIZED_LABEL_Y_OFFSET);\n  var placeholderOpacity = hasActiveOutline ? interpolatePlaceholder(parentState.labeled, hasActiveOutline) : parentState.labelLayout.measured ? 1 : 0;\n  var labelProps = {\n    label: label,\n    onLayoutAnimatedText: onLayoutAnimatedText,\n    placeholderOpacity: placeholderOpacity,\n    error: error,\n    placeholderStyle: styles.placeholder,\n    baseLabelTranslateY: baseLabelTranslateY,\n    baseLabelTranslateX: baseLabelTranslateX,\n    font: font,\n    fontSize: fontSize,\n    fontWeight: fontWeight,\n    labelScale: labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition: topPosition,\n    hasActiveOutline: hasActiveOutline,\n    activeColor: activeColor,\n    placeholderColor: placeholderColor,\n    backgroundColor: backgroundColor,\n    errorColor: errorColor,\n    labelTranslationXOffset: labelTranslationXOffset,\n    roundness: theme.roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier\n  };\n  var minHeight = height || (dense ? MIN_DENSE_HEIGHT : MIN_HEIGHT);\n  var leftLayout = parentState.leftLayout,\n      rightLayout = parentState.rightLayout;\n  var leftAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: minHeight,\n    affixHeight: leftLayout.height || 0,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET\n  });\n  var rightAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: minHeight,\n    affixHeight: rightLayout.height || 0,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET\n  });\n  var iconTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: minHeight,\n    affixHeight: ADORNMENT_SIZE,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET\n  });\n  var rightAffixWidth = right ? rightLayout.width || ADORNMENT_SIZE : ADORNMENT_SIZE;\n  var leftAffixWidth = left ? leftLayout.width || ADORNMENT_SIZE : ADORNMENT_SIZE;\n  var adornmentStyleAdjustmentForNativeInput = getAdornmentStyleAdjustmentForNativeInput({\n    adornmentConfig: adornmentConfig,\n    rightAffixWidth: rightAffixWidth,\n    leftAffixWidth: leftAffixWidth,\n    mode: 'outlined'\n  });\n  var affixTopPosition = (_affixTopPosition = {}, _defineProperty(_affixTopPosition, AdornmentSide.Left, leftAffixTopPosition), _defineProperty(_affixTopPosition, AdornmentSide.Right, rightAffixTopPosition), _affixTopPosition);\n  var onAffixChange = (_onAffixChange = {}, _defineProperty(_onAffixChange, AdornmentSide.Left, onLeftAffixLayoutChange), _defineProperty(_onAffixChange, AdornmentSide.Right, onRightAffixLayoutChange), _onAffixChange);\n  var adornmentProps = {\n    adornmentConfig: adornmentConfig,\n    forceFocus: forceFocus,\n    topPosition: (_topPosition = {}, _defineProperty(_topPosition, AdornmentType.Icon, iconTopPosition), _defineProperty(_topPosition, AdornmentType.Affix, affixTopPosition), _topPosition),\n    onAffixChange: onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier\n  };\n\n  if (adornmentConfig.length) {\n    adornmentProps = _objectSpread(_objectSpread({}, adornmentProps), {}, {\n      left: left,\n      right: right,\n      textStyle: _objectSpread(_objectSpread({}, font), {}, {\n        fontSize: fontSize,\n        fontWeight: fontWeight\n      }),\n      visible: parentState.labeled\n    });\n  }\n\n  return React.createElement(View, {\n    style: viewStyle\n  }, React.createElement(Outline, {\n    theme: theme,\n    hasActiveOutline: hasActiveOutline,\n    focused: parentState.focused,\n    activeColor: activeColor,\n    outlineColor: outlineColor,\n    backgroundColor: backgroundColor\n  }), React.createElement(View, null, React.createElement(View, {\n    style: [styles.labelContainer, {\n      paddingTop: LABEL_PADDING_TOP,\n      minHeight: minHeight\n    }]\n  }, React.createElement(InputLabel, {\n    parentState: parentState,\n    labelProps: labelProps,\n    labelBackground: LabelBackground,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier\n  }), render === null || render === void 0 ? void 0 : render(_objectSpread(_objectSpread({\n    testID: 'text-input-outlined'\n  }, rest), {}, {\n    ref: innerRef,\n    onChangeText: onChangeText,\n    placeholder: label ? parentState.placeholder : rest.placeholder,\n    placeholderTextColor: placeholderTextColor || placeholderColor,\n    editable: !disabled && editable,\n    selectionColor: typeof selectionColor === 'undefined' ? activeColor : selectionColor,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    underlineColorAndroid: 'transparent',\n    multiline: multiline,\n    style: [styles.input, !multiline || multiline && height ? {\n      height: inputHeight\n    } : {}, paddingOut, _objectSpread(_objectSpread({}, font), {}, {\n      fontSize: fontSize,\n      fontWeight: fontWeight,\n      fontVariant: fontVariant,\n      color: inputTextColor,\n      textAlignVertical: multiline ? 'top' : 'center',\n      textAlign: textAlign ? textAlign : I18nManager.isRTL ? 'right' : 'left'\n    }), Platform.OS === 'web' && {\n      outline: 'none'\n    }, adornmentStyleAdjustmentForNativeInput]\n  }))), React.createElement(TextInputAdornment, adornmentProps)));\n};\n\nexport default TextInputOutlined;\n\nvar Outline = function Outline(_ref3) {\n  var theme = _ref3.theme,\n      hasActiveOutline = _ref3.hasActiveOutline,\n      activeColor = _ref3.activeColor,\n      outlineColor = _ref3.outlineColor,\n      focused = _ref3.focused,\n      backgroundColor = _ref3.backgroundColor;\n  return React.createElement(View, {\n    testID: \"text-input-outline\",\n    pointerEvents: \"none\",\n    style: [styles.outline, {\n      backgroundColor: backgroundColor,\n      borderRadius: theme.roundness,\n      borderWidth: focused ? 2 : 1,\n      borderColor: hasActiveOutline ? activeColor : outlineColor\n    }]\n  });\n};\n\nvar styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL\n  },\n  outline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 6,\n    bottom: 0\n  },\n  labelContainer: {\n    paddingBottom: 0\n  },\n  input: {\n    flexGrow: 1,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n    margin: 0,\n    zIndex: 1\n  },\n  inputOutlined: {\n    paddingTop: 8,\n    paddingBottom: 8\n  },\n  inputOutlinedDense: {\n    paddingTop: 4,\n    paddingBottom: 4\n  }\n});","map":{"version":3,"names":["React","color","TextInputAdornment","getAdornmentConfig","getAdornmentStyleAdjustmentForNativeInput","InputLabel","LabelBackground","MAXIMIZED_LABEL_FONT_SIZE","MINIMIZED_LABEL_FONT_SIZE","LABEL_WIGGLE_X_OFFSET","ADORNMENT_SIZE","ADORNMENT_OFFSET","calculateLabelTopPosition","calculateInputHeight","calculatePadding","adjustPaddingOut","interpolatePlaceholder","calculateOutlinedIconAndAffixTopPosition","AdornmentType","AdornmentSide","OUTLINE_MINIMIZED_LABEL_Y_OFFSET","LABEL_PADDING_TOP","MIN_HEIGHT","MIN_DENSE_HEIGHT","INPUT_PADDING_HORIZONTAL","TextInputOutlined","_ref","disabled","editable","label","error","selectionColor","_underlineColor","underlineColor","customOutlineColor","outlineColor","activeOutlineColor","dense","style","theme","render","props","createElement","NativeTextInput","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLeftAffixLayoutChange","onRightAffixLayoutChange","left","right","placeholderTextColor","rest","adornmentConfig","colors","fonts","font","regular","hasActiveOutline","focused","StyleSheet","flatten","fontSizeStyle","fontSize","fontWeight","fontVariant","lineHeight","height","backgroundColor","background","textAlign","viewStyle","inputTextColor","activeColor","placeholderColor","errorColor","isTransparent","alpha","text","rgb","string","primary","placeholder","labelScale","fontScale","labelWidth","labelLayout","width","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","I18nManager","isRTL","labelTranslationXOffset","isAdornmentLeftIcon","some","_ref2","side","type","Left","Icon","minInputHeight","inputHeight","topPosition","console","warn","paddingSettings","offset","scale","isAndroid","Platform","OS","styles","inputOutlinedDense","inputOutlined","pad","paddingOut","baseLabelTranslateY","placeholderOpacity","labeled","measured","labelProps","placeholderStyle","wiggleOffsetX","roundness","maxFontSizeMultiplier","minHeight","leftLayout","rightLayout","leftAffixTopPosition","affixHeight","labelYOffset","rightAffixTopPosition","iconTopPosition","rightAffixWidth","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","mode","affixTopPosition","Right","onAffixChange","adornmentProps","Affix","isTextInputFocused","length","textStyle","visible","View","Outline","labelContainer","paddingTop","labelBackground","testID","ref","underlineColorAndroid","input","textAlignVertical","outline","_ref3","pointerEvents","borderRadius","borderWidth","borderColor","create","position","paddingHorizontal","top","bottom","paddingBottom","flexGrow","margin","zIndex"],"sources":["/Users/rofhiwa/Desktop/react-native-auth/restuarant/node_modules/react-native-paper/lib/module/components/TextInput/TextInputOutlined.js"],"sourcesContent":["import * as React from 'react';\nimport { View, TextInput as NativeTextInput, StyleSheet, I18nManager, Platform } from 'react-native';\nimport color from 'color';\nimport TextInputAdornment, { getAdornmentConfig, getAdornmentStyleAdjustmentForNativeInput } from './Adornment/TextInputAdornment';\nimport InputLabel from './Label/InputLabel';\nimport LabelBackground from './Label/LabelBackground';\nimport { MAXIMIZED_LABEL_FONT_SIZE, MINIMIZED_LABEL_FONT_SIZE, LABEL_WIGGLE_X_OFFSET, ADORNMENT_SIZE, ADORNMENT_OFFSET } from './constants';\nimport { calculateLabelTopPosition, calculateInputHeight, calculatePadding, adjustPaddingOut, interpolatePlaceholder, calculateOutlinedIconAndAffixTopPosition } from './helpers';\nimport { AdornmentType, AdornmentSide } from './Adornment/enums';\nconst OUTLINE_MINIMIZED_LABEL_Y_OFFSET = -6;\nconst LABEL_PADDING_TOP = 8;\nconst MIN_HEIGHT = 64;\nconst MIN_DENSE_HEIGHT = 48;\nconst INPUT_PADDING_HORIZONTAL = 14;\n\nconst TextInputOutlined = _ref => {\n  let {\n    disabled = false,\n    editable = true,\n    label,\n    error = false,\n    selectionColor,\n    underlineColor: _underlineColor,\n    outlineColor: customOutlineColor,\n    activeOutlineColor,\n    dense,\n    style,\n    theme,\n    render = props => /*#__PURE__*/React.createElement(NativeTextInput, props),\n    multiline = false,\n    parentState,\n    innerRef,\n    onFocus,\n    forceFocus,\n    onBlur,\n    onChangeText,\n    onLayoutAnimatedText,\n    onLeftAffixLayoutChange,\n    onRightAffixLayoutChange,\n    left,\n    right,\n    placeholderTextColor,\n    ...rest\n  } = _ref;\n  const adornmentConfig = getAdornmentConfig({\n    left,\n    right\n  });\n  const {\n    colors,\n    fonts\n  } = theme;\n  const font = fonts.regular;\n  const hasActiveOutline = parentState.focused || error;\n  const {\n    fontSize: fontSizeStyle,\n    fontWeight,\n    fontVariant,\n    lineHeight,\n    height,\n    backgroundColor = colors.background,\n    textAlign,\n    ...viewStyle\n  } = StyleSheet.flatten(style) || {};\n  const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n  let inputTextColor, activeColor, outlineColor, placeholderColor, errorColor;\n\n  if (disabled) {\n    const isTransparent = color(customOutlineColor).alpha() === 0;\n    inputTextColor = activeColor = color(colors.text).alpha(0.54).rgb().string();\n    placeholderColor = colors.disabled;\n    outlineColor = isTransparent ? customOutlineColor : colors.disabled;\n  } else {\n    inputTextColor = colors.text;\n    activeColor = error ? colors.error : activeOutlineColor || colors.primary;\n    placeholderColor = colors.placeholder;\n    outlineColor = customOutlineColor || colors.placeholder;\n    errorColor = colors.error;\n  }\n\n  const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n  const labelWidth = parentState.labelLayout.width;\n  const labelHeight = parentState.labelLayout.height;\n  const labelHalfWidth = labelWidth / 2;\n  const labelHalfHeight = labelHeight / 2;\n  const baseLabelTranslateX = (I18nManager.isRTL ? 1 : -1) * (labelHalfWidth - labelScale * labelWidth / 2 - (fontSize - MINIMIZED_LABEL_FONT_SIZE) * labelScale);\n  let labelTranslationXOffset = 0;\n  const isAdornmentLeftIcon = adornmentConfig.some(_ref2 => {\n    let {\n      side,\n      type\n    } = _ref2;\n    return side === AdornmentSide.Left && type === AdornmentType.Icon;\n  });\n\n  if (isAdornmentLeftIcon) {\n    labelTranslationXOffset = (I18nManager.isRTL ? -1 : 1) * (ADORNMENT_SIZE + ADORNMENT_OFFSET - 8);\n  }\n\n  const minInputHeight = (dense ? MIN_DENSE_HEIGHT : MIN_HEIGHT) - LABEL_PADDING_TOP;\n  const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n  const topPosition = calculateLabelTopPosition(labelHeight, inputHeight, LABEL_PADDING_TOP);\n\n  if (height && typeof height !== 'number') {\n    // eslint-disable-next-line\n    console.warn('Currently we support only numbers in height prop');\n  }\n\n  const paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight,\n    offset: LABEL_PADDING_TOP,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition,\n    fontSize,\n    lineHeight,\n    label,\n    scale: fontScale,\n    isAndroid: Platform.OS === 'android',\n    styles: StyleSheet.flatten(dense ? styles.inputOutlinedDense : styles.inputOutlined)\n  };\n  const pad = calculatePadding(paddingSettings);\n  const paddingOut = adjustPaddingOut({ ...paddingSettings,\n    pad\n  });\n  const baseLabelTranslateY = -labelHalfHeight - (topPosition + OUTLINE_MINIMIZED_LABEL_Y_OFFSET);\n  const placeholderOpacity = hasActiveOutline ? interpolatePlaceholder(parentState.labeled, hasActiveOutline) : parentState.labelLayout.measured ? 1 : 0;\n  const labelProps = {\n    label,\n    onLayoutAnimatedText,\n    placeholderOpacity,\n    error,\n    placeholderStyle: styles.placeholder,\n    baseLabelTranslateY,\n    baseLabelTranslateX,\n    font,\n    fontSize,\n    fontWeight,\n    labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition,\n    hasActiveOutline,\n    activeColor,\n    placeholderColor,\n    backgroundColor: backgroundColor,\n    errorColor,\n    labelTranslationXOffset,\n    roundness: theme.roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier\n  };\n  const minHeight = height || (dense ? MIN_DENSE_HEIGHT : MIN_HEIGHT);\n  const {\n    leftLayout,\n    rightLayout\n  } = parentState;\n  const leftAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: minHeight,\n    affixHeight: leftLayout.height || 0,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET\n  });\n  const rightAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: minHeight,\n    affixHeight: rightLayout.height || 0,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET\n  });\n  const iconTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: minHeight,\n    affixHeight: ADORNMENT_SIZE,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET\n  });\n  const rightAffixWidth = right ? rightLayout.width || ADORNMENT_SIZE : ADORNMENT_SIZE;\n  const leftAffixWidth = left ? leftLayout.width || ADORNMENT_SIZE : ADORNMENT_SIZE;\n  const adornmentStyleAdjustmentForNativeInput = getAdornmentStyleAdjustmentForNativeInput({\n    adornmentConfig,\n    rightAffixWidth,\n    leftAffixWidth,\n    mode: 'outlined'\n  });\n  const affixTopPosition = {\n    [AdornmentSide.Left]: leftAffixTopPosition,\n    [AdornmentSide.Right]: rightAffixTopPosition\n  };\n  const onAffixChange = {\n    [AdornmentSide.Left]: onLeftAffixLayoutChange,\n    [AdornmentSide.Right]: onRightAffixLayoutChange\n  };\n  let adornmentProps = {\n    adornmentConfig,\n    forceFocus,\n    topPosition: {\n      [AdornmentType.Icon]: iconTopPosition,\n      [AdornmentType.Affix]: affixTopPosition\n    },\n    onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier\n  };\n\n  if (adornmentConfig.length) {\n    adornmentProps = { ...adornmentProps,\n      left,\n      right,\n      textStyle: { ...font,\n        fontSize,\n        fontWeight\n      },\n      visible: parentState.labeled\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(View, {\n    style: viewStyle\n  }, /*#__PURE__*/React.createElement(Outline, {\n    theme: theme,\n    hasActiveOutline: hasActiveOutline,\n    focused: parentState.focused,\n    activeColor: activeColor,\n    outlineColor: outlineColor,\n    backgroundColor: backgroundColor\n  }), /*#__PURE__*/React.createElement(View, null, /*#__PURE__*/React.createElement(View, {\n    style: [styles.labelContainer, {\n      paddingTop: LABEL_PADDING_TOP,\n      minHeight\n    }]\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    parentState: parentState,\n    labelProps: labelProps,\n    labelBackground: LabelBackground,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier\n  }), render === null || render === void 0 ? void 0 : render({\n    testID: 'text-input-outlined',\n    ...rest,\n    ref: innerRef,\n    onChangeText,\n    placeholder: label ? parentState.placeholder : rest.placeholder,\n    placeholderTextColor: placeholderTextColor || placeholderColor,\n    editable: !disabled && editable,\n    selectionColor: typeof selectionColor === 'undefined' ? activeColor : selectionColor,\n    onFocus,\n    onBlur,\n    underlineColorAndroid: 'transparent',\n    multiline,\n    style: [styles.input, !multiline || multiline && height ? {\n      height: inputHeight\n    } : {}, paddingOut, { ...font,\n      fontSize,\n      fontWeight,\n      fontVariant,\n      color: inputTextColor,\n      textAlignVertical: multiline ? 'top' : 'center',\n      textAlign: textAlign ? textAlign : I18nManager.isRTL ? 'right' : 'left'\n    }, Platform.OS === 'web' && {\n      outline: 'none'\n    }, adornmentStyleAdjustmentForNativeInput]\n  })), /*#__PURE__*/React.createElement(TextInputAdornment, adornmentProps)));\n};\n\nexport default TextInputOutlined;\n\nconst Outline = _ref3 => {\n  let {\n    theme,\n    hasActiveOutline,\n    activeColor,\n    outlineColor,\n    focused,\n    backgroundColor\n  } = _ref3;\n  return /*#__PURE__*/React.createElement(View, {\n    testID: \"text-input-outline\",\n    pointerEvents: \"none\",\n    style: [styles.outline, // eslint-disable-next-line react-native/no-inline-styles\n    {\n      backgroundColor,\n      borderRadius: theme.roundness,\n      borderWidth: focused ? 2 : 1,\n      borderColor: hasActiveOutline ? activeColor : outlineColor\n    }]\n  });\n};\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL\n  },\n  outline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 6,\n    bottom: 0\n  },\n  labelContainer: {\n    paddingBottom: 0\n  },\n  input: {\n    flexGrow: 1,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n    margin: 0,\n    zIndex: 1\n  },\n  inputOutlined: {\n    paddingTop: 8,\n    paddingBottom: 8\n  },\n  inputOutlinedDense: {\n    paddingTop: 4,\n    paddingBottom: 4\n  }\n});\n//# sourceMappingURL=TextInputOutlined.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module"}