{"ast":null,"code":"import color from 'color';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport DarkTheme from \"./DarkTheme\";\n\nvar isAnimatedValue = function isAnimatedValue(it) {\n  return it instanceof Animated.Value;\n};\n\nexport default function overlay(elevation) {\n  var surfaceColor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DarkTheme.colors.surface;\n\n  if (isAnimatedValue(elevation)) {\n    var inputRange = [0, 1, 2, 3, 8, 24];\n    return elevation.interpolate({\n      inputRange: inputRange,\n      outputRange: inputRange.map(function (elevation) {\n        return calculateColor(surfaceColor, elevation);\n      })\n    });\n  }\n\n  return calculateColor(surfaceColor, elevation);\n}\n\nfunction calculateColor(surfaceColor) {\n  var elevation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var overlayTransparency;\n\n  if (elevation >= 1 && elevation <= 24) {\n    overlayTransparency = elevationOverlayTransparency[elevation];\n  } else if (elevation > 24) {\n    overlayTransparency = elevationOverlayTransparency[24];\n  } else {\n    overlayTransparency = elevationOverlayTransparency[1];\n  }\n\n  return color(surfaceColor).mix(color('white'), overlayTransparency * 0.01).hex();\n}\n\nvar elevationOverlayTransparency = {\n  1: 5,\n  2: 7,\n  3: 8,\n  4: 9,\n  5: 10,\n  6: 11,\n  7: 11.5,\n  8: 12,\n  9: 12.5,\n  10: 13,\n  11: 13.5,\n  12: 14,\n  13: 14.25,\n  14: 14.5,\n  15: 14.75,\n  16: 15,\n  17: 15.12,\n  18: 15.24,\n  19: 15.36,\n  20: 15.48,\n  21: 15.6,\n  22: 15.72,\n  23: 15.84,\n  24: 16\n};","map":{"version":3,"names":["color","DarkTheme","isAnimatedValue","it","Animated","Value","overlay","elevation","surfaceColor","arguments","length","undefined","colors","surface","inputRange","interpolate","outputRange","map","calculateColor","overlayTransparency","elevationOverlayTransparency","mix","hex"],"sources":["/Users/rofhiwa/Desktop/react-native-auth/restuarant/node_modules/react-native-paper/lib/module/styles/overlay.js"],"sourcesContent":["import color from 'color';\nimport { Animated } from 'react-native';\nimport DarkTheme from './DarkTheme';\n\nconst isAnimatedValue = it => it instanceof Animated.Value;\n\nexport default function overlay(elevation) {\n  let surfaceColor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DarkTheme.colors.surface;\n\n  if (isAnimatedValue(elevation)) {\n    const inputRange = [0, 1, 2, 3, 8, 24]; // @ts-expect-error: TS doesn't seem to refine the type correctly\n\n    return elevation.interpolate({\n      inputRange,\n      outputRange: inputRange.map(elevation => {\n        return calculateColor(surfaceColor, elevation);\n      })\n    });\n  } // @ts-expect-error: TS doesn't seem to refine the type correctly\n\n\n  return calculateColor(surfaceColor, elevation);\n}\n\nfunction calculateColor(surfaceColor) {\n  let elevation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  let overlayTransparency;\n\n  if (elevation >= 1 && elevation <= 24) {\n    overlayTransparency = elevationOverlayTransparency[elevation];\n  } else if (elevation > 24) {\n    overlayTransparency = elevationOverlayTransparency[24];\n  } else {\n    overlayTransparency = elevationOverlayTransparency[1];\n  }\n\n  return color(surfaceColor).mix(color('white'), overlayTransparency * 0.01).hex();\n}\n\nconst elevationOverlayTransparency = {\n  1: 5,\n  2: 7,\n  3: 8,\n  4: 9,\n  5: 10,\n  6: 11,\n  7: 11.5,\n  8: 12,\n  9: 12.5,\n  10: 13,\n  11: 13.5,\n  12: 14,\n  13: 14.25,\n  14: 14.5,\n  15: 14.75,\n  16: 15,\n  17: 15.12,\n  18: 15.24,\n  19: 15.36,\n  20: 15.48,\n  21: 15.6,\n  22: 15.72,\n  23: 15.84,\n  24: 16\n};\n//# sourceMappingURL=overlay.js.map"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAOC,SAAP;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,EAAE;EAAA,OAAIA,EAAE,YAAYC,QAAQ,CAACC,KAA3B;AAAA,CAA1B;;AAEA,eAAe,SAASC,OAAT,CAAiBC,SAAjB,EAA4B;EACzC,IAAIC,YAAY,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoER,SAAS,CAACW,MAAV,CAAiBC,OAAxG;;EAEA,IAAIX,eAAe,CAACK,SAAD,CAAnB,EAAgC;IAC9B,IAAMO,UAAU,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,EAAhB,CAAnB;IAEA,OAAOP,SAAS,CAACQ,WAAV,CAAsB;MAC3BD,UAAU,EAAVA,UAD2B;MAE3BE,WAAW,EAAEF,UAAU,CAACG,GAAX,CAAe,UAAAV,SAAS,EAAI;QACvC,OAAOW,cAAc,CAACV,YAAD,EAAeD,SAAf,CAArB;MACD,CAFY;IAFc,CAAtB,CAAP;EAMD;;EAGD,OAAOW,cAAc,CAACV,YAAD,EAAeD,SAAf,CAArB;AACD;;AAED,SAASW,cAAT,CAAwBV,YAAxB,EAAsC;EACpC,IAAID,SAAS,GAAGE,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,CAApF;EACA,IAAIU,mBAAJ;;EAEA,IAAIZ,SAAS,IAAI,CAAb,IAAkBA,SAAS,IAAI,EAAnC,EAAuC;IACrCY,mBAAmB,GAAGC,4BAA4B,CAACb,SAAD,CAAlD;EACD,CAFD,MAEO,IAAIA,SAAS,GAAG,EAAhB,EAAoB;IACzBY,mBAAmB,GAAGC,4BAA4B,CAAC,EAAD,CAAlD;EACD,CAFM,MAEA;IACLD,mBAAmB,GAAGC,4BAA4B,CAAC,CAAD,CAAlD;EACD;;EAED,OAAOpB,KAAK,CAACQ,YAAD,CAAL,CAAoBa,GAApB,CAAwBrB,KAAK,CAAC,OAAD,CAA7B,EAAwCmB,mBAAmB,GAAG,IAA9D,EAAoEG,GAApE,EAAP;AACD;;AAED,IAAMF,4BAA4B,GAAG;EACnC,GAAG,CADgC;EAEnC,GAAG,CAFgC;EAGnC,GAAG,CAHgC;EAInC,GAAG,CAJgC;EAKnC,GAAG,EALgC;EAMnC,GAAG,EANgC;EAOnC,GAAG,IAPgC;EAQnC,GAAG,EARgC;EASnC,GAAG,IATgC;EAUnC,IAAI,EAV+B;EAWnC,IAAI,IAX+B;EAYnC,IAAI,EAZ+B;EAanC,IAAI,KAb+B;EAcnC,IAAI,IAd+B;EAenC,IAAI,KAf+B;EAgBnC,IAAI,EAhB+B;EAiBnC,IAAI,KAjB+B;EAkBnC,IAAI,KAlB+B;EAmBnC,IAAI,KAnB+B;EAoBnC,IAAI,KApB+B;EAqBnC,IAAI,IArB+B;EAsBnC,IAAI,KAtB+B;EAuBnC,IAAI,KAvB+B;EAwBnC,IAAI;AAxB+B,CAArC"},"metadata":{},"sourceType":"module"}